<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('City', 'doctrine');

/**
 * BaseCity
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $city_id
 * @property string $city_name
 * @property string $description
 * @property Doctrine_Collection $Zones
 * 
 * @method integer             getCityId()      Returns the current record's "city_id" value
 * @method string              getCityName()    Returns the current record's "city_name" value
 * @method string              getDescription() Returns the current record's "description" value
 * @method Doctrine_Collection getZones()       Returns the current record's "Zones" collection
 * @method City                setCityId()      Sets the current record's "city_id" value
 * @method City                setCityName()    Sets the current record's "city_name" value
 * @method City                setDescription() Sets the current record's "description" value
 * @method City                setZones()       Sets the current record's "Zones" collection
 * 
 * @package    uss
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseCity extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('city');
        $this->hasColumn('city_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => '4',
             ));
        $this->hasColumn('city_name', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '255',
             ));
        $this->hasColumn('description', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Zones', array(
             'local' => 'city_id',
             'foreign' => 'city_id'));
    }
}