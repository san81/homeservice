<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Items', 'doctrine');

/**
 * BaseItems
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $item_id
 * @property string $item_name
 * @property float $item_price
 * @property string $item_description
 * @property Doctrine_Collection $Complaints
 * @property Doctrine_Collection $CustRegItems
 * 
 * @method integer             getItemId()           Returns the current record's "item_id" value
 * @method string              getItemName()         Returns the current record's "item_name" value
 * @method float               getItemPrice()        Returns the current record's "item_price" value
 * @method string              getItemDescription()  Returns the current record's "item_description" value
 * @method Doctrine_Collection getComplaints()       Returns the current record's "Complaints" collection
 * @method Doctrine_Collection getCustRegItems()     Returns the current record's "CustRegItems" collection
 * @method Items               setItemId()           Sets the current record's "item_id" value
 * @method Items               setItemName()         Sets the current record's "item_name" value
 * @method Items               setItemPrice()        Sets the current record's "item_price" value
 * @method Items               setItemDescription()  Sets the current record's "item_description" value
 * @method Items               setComplaints()       Sets the current record's "Complaints" collection
 * @method Items               setCustRegItems()     Sets the current record's "CustRegItems" collection
 * 
 * @package    uss
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseItems extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('items');
        $this->hasColumn('item_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => '4',
             ));
        $this->hasColumn('item_name', 'string', 200, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '200',
             ));
        $this->hasColumn('item_price', 'float', 8, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '8',
             ));
        $this->hasColumn('item_description', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Complaints', array(
             'local' => 'item_id',
             'foreign' => 'item_id'));

        $this->hasMany('CustRegItems', array(
             'local' => 'item_id',
             'foreign' => 'item_id'));
    }
}