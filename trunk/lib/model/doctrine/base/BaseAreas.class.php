<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Areas', 'doctrine');

/**
 * BaseAreas
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $area_id
 * @property string $area_code
 * @property string $area_name
 * @property integer $zone_id
 * @property string $description
 * @property Zones $Zones
 * @property Doctrine_Collection $Customer
 * @property Doctrine_Collection $Employee
 * 
 * @method integer             getAreaId()      Returns the current record's "area_id" value
 * @method string              getAreaCode()    Returns the current record's "area_code" value
 * @method string              getAreaName()    Returns the current record's "area_name" value
 * @method integer             getZoneId()      Returns the current record's "zone_id" value
 * @method string              getDescription() Returns the current record's "description" value
 * @method Zones               getZones()       Returns the current record's "Zones" value
 * @method Doctrine_Collection getCustomer()    Returns the current record's "Customer" collection
 * @method Doctrine_Collection getEmployee()    Returns the current record's "Employee" collection
 * @method Areas               setAreaId()      Sets the current record's "area_id" value
 * @method Areas               setAreaCode()    Sets the current record's "area_code" value
 * @method Areas               setAreaName()    Sets the current record's "area_name" value
 * @method Areas               setZoneId()      Sets the current record's "zone_id" value
 * @method Areas               setDescription() Sets the current record's "description" value
 * @method Areas               setZones()       Sets the current record's "Zones" value
 * @method Areas               setCustomer()    Sets the current record's "Customer" collection
 * @method Areas               setEmployee()    Sets the current record's "Employee" collection
 * 
 * @package    uss
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseAreas extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('areas');
        $this->hasColumn('area_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => '4',
             ));
        $this->hasColumn('area_code', 'string', 5, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '5',
             ));
        $this->hasColumn('area_name', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '255',
             ));
        $this->hasColumn('zone_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('description', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Zones', array(
             'local' => 'zone_id',
             'foreign' => 'zone_id'));

        $this->hasMany('Customer', array(
             'local' => 'area_id',
             'foreign' => 'area_id'));

        $this->hasMany('Employee', array(
             'local' => 'area_id',
             'foreign' => 'area_id'));
    }
}